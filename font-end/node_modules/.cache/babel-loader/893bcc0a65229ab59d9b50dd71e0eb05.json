{"ast":null,"code":"var _jsxFileName = \"D:\\\\Th\\u1EF1c T\\u1EADp\\\\React_Hook\\\\ToDoList-Hooks\\\\font-end\\\\src\\\\Components\\\\Register.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register(props) {\n  _s();\n\n  const {\n    getName\n  } = props;\n  const [inputUser, setInputUser] = useState({});\n  const history = useHistory();\n\n  const onHandleChange = e => {\n    setInputUser({ ...inputUser,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onHandleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const option = {\n        method: 'post',\n        url: \"/api/v1/auth/register\",\n        data: inputUser\n      };\n      const response = await axios(option);\n      const {\n        token,\n        userName\n      } = response.data.data;\n      localStorage.setItem('token', token);\n      getName(userName);\n      history.push('/home');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"login\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        class: \"form-login form-register\",\n        onSubmit: onHandleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"logo\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"input-text\",\n          type: \"text\",\n          placeholder: \"Username\",\n          name: \"name\",\n          onChange: onHandleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"input-text\",\n          type: \"text\",\n          placeholder: \"Email\",\n          name: \"email\",\n          onChange: onHandleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"input-text\",\n          type: \"password\",\n          placeholder: \"Password\",\n          name: \"password\",\n          onChange: onHandleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            class: \"btn-login\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"7erl4ntTd2Ig5zTGS7k7+75iIW8=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["D:/Thực Tập/React_Hook/ToDoList-Hooks/font-end/src/Components/Register.jsx"],"names":["axios","React","useState","useHistory","Register","props","getName","inputUser","setInputUser","history","onHandleChange","e","target","name","value","onHandleSubmit","preventDefault","option","method","url","data","response","token","userName","localStorage","setItem","push","error","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAGA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACrB,QAAM;AAACC,IAAAA;AAAD,MAAYD,KAAlB;AACA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAMO,OAAO,GAAGN,UAAU,EAA1B;;AACA,QAAMO,cAAc,GAAIC,CAAD,IAAO;AAC1BH,IAAAA,YAAY,CAAC,EAAC,GAAGD,SAAJ;AAAe,OAACI,CAAC,CAACC,MAAF,CAASC,IAAV,GAAkBF,CAAC,CAACC,MAAF,CAASE;AAA1C,KAAD,CAAZ;AACH,GAFD;;AAGA,QAAMC,cAAc,GAAG,MAAOJ,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACK,cAAF;;AACA,QAAI;AACA,YAAMC,MAAM,GAAG;AACXC,QAAAA,MAAM,EAAG,MADE;AAEXC,QAAAA,GAAG,EAAE,uBAFM;AAGXC,QAAAA,IAAI,EAAEb;AAHK,OAAf;AAKA,YAAMc,QAAQ,GAAG,MAAMrB,KAAK,CAACiB,MAAD,CAA5B;AACA,YAAM;AAACK,QAAAA,KAAD;AAAQC,QAAAA;AAAR,UAAoBF,QAAQ,CAACD,IAAT,CAAcA,IAAxC;AACAI,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,KAA9B;AACAhB,MAAAA,OAAO,CAACiB,QAAD,CAAP;AACAd,MAAAA,OAAO,CAACiB,IAAR,CAAa,OAAb;AACH,KAXD,CAWE,OAAOC,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,GAhBD;;AAiBA,sBACI;AAAK,IAAA,KAAK,EAAC,OAAX;AAAA,2BACA;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA,6BACI;AAAM,QAAA,KAAK,EAAC,0BAAZ;AAAuC,QAAA,QAAQ,EAAIZ,cAAnD;AAAA,gCACA;AAAM,UAAA,KAAK,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AACI,UAAA,KAAK,EAAC,YADV;AAEI,UAAA,IAAI,EAAC,MAFT;AAGI,UAAA,WAAW,EAAC,UAHhB;AAII,UAAA,IAAI,EAAE,MAJV;AAKI,UAAA,QAAQ,EAAIL;AALhB;AAAA;AAAA;AAAA;AAAA,gBAFA,eASA;AACI,UAAA,KAAK,EAAC,YADV;AAEI,UAAA,IAAI,EAAC,MAFT;AAGI,UAAA,WAAW,EAAC,OAHhB;AAII,UAAA,IAAI,EAAG,OAJX;AAKI,UAAA,QAAQ,EAAIA;AALhB;AAAA;AAAA;AAAA;AAAA,gBATA,eAgBA;AACI,UAAA,KAAK,EAAC,YADV;AAEI,UAAA,IAAI,EAAC,UAFT;AAGI,UAAA,WAAW,EAAC,UAHhB;AAII,UAAA,IAAI,EAAG,UAJX;AAKI,UAAA,QAAQ,EAAIA;AALhB;AAAA;AAAA;AAAA;AAAA,gBAhBA,eAuBA;AAAA,iCAAK;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,KAAK,EAAC,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,gBAvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH;;GAvDQN,Q;UAGWD,U;;;KAHXC,Q;AAyDT,eAAeA,QAAf","sourcesContent":["import axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nfunction Register(props) {\r\n    const {getName} = props;\r\n    const [inputUser, setInputUser] = useState({});\r\n    const history = useHistory();\r\n    const onHandleChange = (e) => {\r\n        setInputUser({...inputUser, [e.target.name] : e.target.value});\r\n    }\r\n    const onHandleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const option = {\r\n                method : 'post',\r\n                url :\"/api/v1/auth/register\",\r\n                data: inputUser\r\n            }\r\n            const response = await axios(option);\r\n            const {token, userName} = response.data.data;\r\n            localStorage.setItem('token', token);\r\n            getName(userName);\r\n            history.push('/home');\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    return (\r\n        <div class=\"login\">\r\n        <div class=\"container\">\r\n            <form class=\"form-login form-register\" onSubmit = {onHandleSubmit}>\r\n            <span class=\"logo\">Register</span>\r\n            <input \r\n                class=\"input-text\" \r\n                type=\"text\" \r\n                placeholder=\"Username\" \r\n                name =\"name\"\r\n                onChange = {onHandleChange}\r\n                />\r\n            <input \r\n                class=\"input-text\" \r\n                type=\"text\" \r\n                placeholder=\"Email\" \r\n                name = \"email\"\r\n                onChange = {onHandleChange}\r\n                />\r\n            <input \r\n                class=\"input-text\" \r\n                type=\"password\" \r\n                placeholder=\"Password\" \r\n                name = \"password\"\r\n                onChange = {onHandleChange}\r\n                />\r\n            <div><button type=\"submit\" class=\"btn-login\">Register</button></div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}